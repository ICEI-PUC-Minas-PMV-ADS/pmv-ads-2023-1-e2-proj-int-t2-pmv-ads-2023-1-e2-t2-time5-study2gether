// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Study2gether.Models;

namespace Study2gether.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230422221604_Initial00")]
    partial class Initial00
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Study2gether.Models.Answer", b =>
                {
                    b.Property<Guid>("idAnswer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("idPost")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idAnswer");

                    b.HasIndex("idPost");

                    b.HasIndex("idUser");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Study2gether.Models.Axis", b =>
                {
                    b.Property<Guid>("idAxis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idAxis");

                    b.ToTable("Axis");
                });

            modelBuilder.Entity("Study2gether.Models.Category", b =>
                {
                    b.Property<Guid>("idCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCategory");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Study2gether.Models.Microfoundation", b =>
                {
                    b.Property<Guid>("idMicrofoundation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMicrofoundation");

                    b.ToTable("Microfoundation");
                });

            modelBuilder.Entity("Study2gether.Models.Post", b =>
                {
                    b.Property<Guid>("idPost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("idUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("views")
                        .HasColumnType("int");

                    b.HasKey("idPost");

                    b.HasIndex("idUser");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Study2gether.Models.Post_Axis", b =>
                {
                    b.Property<Guid>("idPost")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idAxis")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("idPost", "idAxis");

                    b.HasIndex("idAxis");

                    b.ToTable("Post_Axis");
                });

            modelBuilder.Entity("Study2gether.Models.Post_Category", b =>
                {
                    b.Property<Guid>("idPost")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idCategory")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("idPost", "idCategory");

                    b.HasIndex("idCategory");

                    b.ToTable("Post_Category");
                });

            modelBuilder.Entity("Study2gether.Models.Post_Microfoundation", b =>
                {
                    b.Property<Guid>("idPost")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idMicrofoundation")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("idPost", "idMicrofoundation");

                    b.HasIndex("idMicrofoundation");

                    b.ToTable("Post_Microfoundation");
                });

            modelBuilder.Entity("Study2gether.Models.User", b =>
                {
                    b.Property<Guid>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("socialMedia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Study2gether.Models.Answer", b =>
                {
                    b.HasOne("Study2gether.Models.Post", "Post")
                        .WithMany("Answers")
                        .HasForeignKey("idPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Study2gether.Models.User", "User")
                        .WithMany("Answers")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Study2gether.Models.Post", b =>
                {
                    b.HasOne("Study2gether.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Study2gether.Models.Post_Axis", b =>
                {
                    b.HasOne("Study2gether.Models.Axis", "Axis")
                        .WithMany("Post_Axis")
                        .HasForeignKey("idAxis")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Study2gether.Models.Post", "Post")
                        .WithMany("Post_Axis")
                        .HasForeignKey("idPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Axis");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Study2gether.Models.Post_Category", b =>
                {
                    b.HasOne("Study2gether.Models.Category", "Category")
                        .WithMany("Post_Category")
                        .HasForeignKey("idCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Study2gether.Models.Post", "Post")
                        .WithMany("Post_Category")
                        .HasForeignKey("idPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Study2gether.Models.Post_Microfoundation", b =>
                {
                    b.HasOne("Study2gether.Models.Microfoundation", "Microfoundation")
                        .WithMany("Post_Microfoundation")
                        .HasForeignKey("idMicrofoundation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Study2gether.Models.Post", "Post")
                        .WithMany("Post_Microfoundation")
                        .HasForeignKey("idPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Microfoundation");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Study2gether.Models.Axis", b =>
                {
                    b.Navigation("Post_Axis");
                });

            modelBuilder.Entity("Study2gether.Models.Category", b =>
                {
                    b.Navigation("Post_Category");
                });

            modelBuilder.Entity("Study2gether.Models.Microfoundation", b =>
                {
                    b.Navigation("Post_Microfoundation");
                });

            modelBuilder.Entity("Study2gether.Models.Post", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Post_Axis");

                    b.Navigation("Post_Category");

                    b.Navigation("Post_Microfoundation");
                });

            modelBuilder.Entity("Study2gether.Models.User", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
